{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\B.mani chandu\\\\OneDrive\\\\Desktop\\\\User Management\\\\client\\\\admin-panel\\\\src\\\\components\\\\UserForm.js\",\n  _s = $RefreshSig$();\n// src/components/UserForm.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserForm = ({\n  onSubmit,\n  initialUser,\n  isEditing\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [role, setRole] = useState('user'); // Default role\n\n  // If editing an existing user, populate the form\n  useEffect(() => {\n    if (initialUser) {\n      setName(initialUser.name);\n      setEmail(initialUser.email);\n      setRole(initialUser.role);\n      // Don't pre-fill password for security reasons\n    }\n  }, [initialUser]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Basic validation\n    if (!name || !email || !isEditing && !password) {\n      alert('Please fill in all required fields.');\n      return;\n    }\n    onSubmit({\n      name,\n      email,\n      password: password || undefined,\n      role\n    }); // Pass password only if provided\n    // Clear form after submission if not editing\n    if (!isEditing) {\n      setName('');\n      setEmail('');\n      setPassword('');\n      setRole('user');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: isEditing ? 'Edit User' : 'Add New User'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), !isEditing &&\n    /*#__PURE__*/\n    // Only show password input when adding a new user\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Role:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: role,\n        onChange: e => setRole(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"user\",\n          children: \"User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"admin\",\n          children: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: isEditing ? 'Update User' : 'Add User'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(UserForm, \"X+lKRJjTGJB8dPG6pA9l2i1VqwE=\");\n_c = UserForm;\nexport default UserForm;\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UserForm","onSubmit","initialUser","isEditing","_s","name","setName","email","setEmail","password","setPassword","role","setRole","handleSubmit","e","preventDefault","alert","undefined","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/B.mani chandu/OneDrive/Desktop/User Management/client/admin-panel/src/components/UserForm.js"],"sourcesContent":["// src/components/UserForm.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst UserForm = ({ onSubmit, initialUser, isEditing }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [role, setRole] = useState('user'); // Default role\r\n\r\n    // If editing an existing user, populate the form\r\n    useEffect(() => {\r\n        if (initialUser) {\r\n            setName(initialUser.name);\r\n            setEmail(initialUser.email);\r\n            setRole(initialUser.role);\r\n            // Don't pre-fill password for security reasons\r\n        }\r\n    }, [initialUser]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Basic validation\r\n        if (!name || !email || (!isEditing && !password)) {\r\n            alert('Please fill in all required fields.');\r\n            return;\r\n        }\r\n        onSubmit({ name, email, password: password || undefined, role }); // Pass password only if provided\r\n        // Clear form after submission if not editing\r\n        if (!isEditing) {\r\n            setName('');\r\n            setEmail('');\r\n            setPassword('');\r\n            setRole('user');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>{isEditing ? 'Edit User' : 'Add New User'}</h3>\r\n            <div>\r\n                <label>Name:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    required\r\n                />\r\n            </div>\r\n            <div>\r\n                <label>Email:</label>\r\n                <input\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required\r\n                />\r\n            </div>\r\n            {!isEditing && ( // Only show password input when adding a new user\r\n                <div>\r\n                    <label>Password:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n            )}\r\n            <div>\r\n                <label>Role:</label>\r\n                <select value={role} onChange={(e) => setRole(e.target.value)}>\r\n                    <option value=\"user\">User</option>\r\n                    <option value=\"admin\">Admin</option>\r\n                </select>\r\n            </div>\r\n            <button type=\"submit\">{isEditing ? 'Update User' : 'Add User'}</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default UserForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}