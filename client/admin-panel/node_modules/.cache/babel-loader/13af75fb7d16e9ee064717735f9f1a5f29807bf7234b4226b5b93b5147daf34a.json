{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\B.mani chandu\\\\OneDrive\\\\Desktop\\\\User Management\\\\client\\\\admin-panel\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/AuthContext.js\nimport React, { createContext, useState, useContext } from 'react';\nimport { login as loginApi, getUsers as fetchUsersApi } from '../api/api'; // Import your API functions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(() => localStorage.getItem('jwtToken'));\n  const [user, setUser] = useState(() => {\n    const storedToken = localStorage.getItem('jwtToken');\n    return storedToken ? {\n      id: 'admin_user_001',\n      role: 'admin',\n      name: 'Admin User'\n    } : null;\n  });\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [users, setUsers] = useState([]); // For storing user list\n\n  const login = async (email, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const userData = await loginApi(email, password);\n      setToken(userData.token);\n      setUser(userData.user); // Assuming your login API returns { token, user: { id, email, role, name } }\n      localStorage.setItem('jwtToken', userData.token);\n      return true; // Indicate successful login\n    } catch (err) {\n      setError(err.message || 'Login failed');\n      setToken(null);\n      setUser(null);\n      localStorage.removeItem('jwtToken');\n      return false; // Indicate failed login\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    localStorage.removeItem('jwtToken');\n  };\n\n  // Function to fetch users and set them in context\n  const fetchUsers = async () => {\n    setLoading(true); // You might have a separate loading state for users\n    setError(null);\n    try {\n      const userList = await fetchUsersApi();\n      setUsers(userList);\n    } catch (err) {\n      setError(err.message || 'Failed to fetch users');\n      setUsers([]); // Clear users on error\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add functions for addUser, deleteUser, updateUser here as well\n  // ...\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      user,\n      login,\n      logout,\n      error,\n      loading,\n      users,\n      fetchUsers\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"4XYfr3N+bk1Zt8rv511i9wL1Ypc=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","login","loginApi","getUsers","fetchUsersApi","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","token","setToken","localStorage","getItem","user","setUser","storedToken","id","role","name","error","setError","loading","setLoading","users","setUsers","email","password","userData","setItem","err","message","removeItem","logout","fetchUsers","userList","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/B.mani chandu/OneDrive/Desktop/User Management/client/admin-panel/src/contexts/AuthContext.js"],"sourcesContent":["// src/contexts/AuthContext.js\r\nimport React, { createContext, useState, useContext } from 'react';\r\nimport { login as loginApi, getUsers as fetchUsersApi } from '../api/api'; // Import your API functions\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [token, setToken] = useState(() => localStorage.getItem('jwtToken'));\r\n    const [user, setUser] = useState(() => {\r\n        const storedToken = localStorage.getItem('jwtToken');\r\n        return storedToken ? { id: 'admin_user_001', role: 'admin', name: 'Admin User' } : null;\r\n    });\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [users, setUsers] = useState([]); // For storing user list\r\n\r\n    const login = async (email, password) => {\r\n        setLoading(true);\r\n        setError(null);\r\n        try {\r\n            const userData = await loginApi(email, password);\r\n            setToken(userData.token);\r\n            setUser(userData.user); // Assuming your login API returns { token, user: { id, email, role, name } }\r\n            localStorage.setItem('jwtToken', userData.token);\r\n            return true; // Indicate successful login\r\n        } catch (err) {\r\n            setError(err.message || 'Login failed');\r\n            setToken(null);\r\n            setUser(null);\r\n            localStorage.removeItem('jwtToken');\r\n            return false; // Indicate failed login\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        setToken(null);\r\n        setUser(null);\r\n        localStorage.removeItem('jwtToken');\r\n    };\r\n\r\n    // Function to fetch users and set them in context\r\n    const fetchUsers = async () => {\r\n        setLoading(true); // You might have a separate loading state for users\r\n        setError(null);\r\n        try {\r\n            const userList = await fetchUsersApi();\r\n            setUsers(userList);\r\n        } catch (err) {\r\n            setError(err.message || 'Failed to fetch users');\r\n            setUsers([]); // Clear users on error\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Add functions for addUser, deleteUser, updateUser here as well\r\n    // ...\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ token, user, login, logout, error, loading, users, fetchUsers }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}